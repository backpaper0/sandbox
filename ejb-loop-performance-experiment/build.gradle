apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

war.archiveName = 'sample.war'

def env = project.properties['env']
if (env == null) {
    env = 'wildfly'
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    providedCompile 'javax:javaee-api:7.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.jboss.arquillian.junit:arquillian-junit-container:1.1.9.Final'
    if (env == 'payara-micro') {
        testCompile 'fish.payara.extras:payara-micro:4.1.153'
    }
}

if (env == 'wildfly') {
    dependencies {
        testRuntime 'org.wildfly.arquillian:wildfly-arquillian-container-managed:1.0.1.Final'
        archives 'org.wildfly:wildfly-dist:9.0.1.Final@zip'
    }

    task readyWildfly(type: Copy) {
        def wildflyZip = configurations.archives.find { it.name ==~ /wildfly.*/ }

        from zipTree(wildflyZip)
            into buildDir

            inputs.file wildflyZip
            outputs.upToDateWhen { new File(buildDir, 'wildfly-9.0.1.Final').exists() }
    }

    test.dependsOn readyWildfly
}

if (env == 'payara-micro') {
    dependencies {
        testCompile 'fish.payara.extras:payara-micro:4.1.153'
        testCompile 'org.jboss.arquillian.container:arquillian-glassfish-embedded-3.1:1.0.0.CR4'
    }

    test.systemProperty 'arquillian.launch', 'payara-micro'
}

if (env == 'payara-managed') {
    dependencies {
        testCompile 'org.jboss.arquillian.container:arquillian-glassfish-managed-3.1:1.0.0.CR4'
    }

    test {
        systemProperty 'arquillian.launch', 'payara-managed'
        systemProperty 'payara.home', project.properties['payara.home']
    }
}

